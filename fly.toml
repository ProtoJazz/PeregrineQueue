app = 'peregrinequeue'
primary_region = 'yyz'
kill_signal = 'SIGTERM'

[build]

[env]
PHX_HOST = 'peregrinequeue.fly.dev'
PORT = '8080'
DISPLAY_DEMO = 'true'
GRPC_SERVER_HOST = '0.0.0.0'
GRPC_SERVER_PORT = '50051'
RUST_LOG = "debug"
FLY_ENABLE_PRIVATE_NETWORK = "true"

[processes]
app = "/app/bin/peregrine_queue start"
worker = """\
  /usr/local/bin/fast_response_rust_worker \
  --worker-id=fast_running_rust_worker \
  --worker-address=worker.process.peregrinequeue.internal:50053 \
  --queue-address=app.process.peregrinequeue.internal:50051 \
  --queue-name=media_update \
  --demo-mode\
  """
  image-worker = """\
  /usr/local/bin/fast_response_rust_worker \
  --worker-id=image_rust_worker \
  --worker-address=image-worker.process.peregrinequeue.internal:50053 \
  --queue-address=app.process.peregrinequeue.internal:50051 \
  --queue-name=data_sync \
  --demo-mode\
  """

[deploy]
  release_command = "/app/bin/peregrine_queue eval 'PeregrineQueue.Release.migrate'"

# Phoenix web service
[http_service]
internal_port = 8080
force_https = true
auto_stop_machines = 'stop'
auto_start_machines = true
min_machines_running = 1
max_machines_running = 1
processes = ['app']

[http_service.concurrency]
type = 'connections'
hard_limit = 1000
soft_limit = 1000

# Queue gRPC Service
[[services]]
internal_port = 50051
protocol = "tcp"
processes = ["app"]
internal_name = "queue-grpc"

[[services.ports]]
port = 50051

# Worker gRPC Service
[[services]]
internal_port = 50053
protocol = "tcp"
processes = ["worker", "image-worker"]
internal_name = "worker-grpc"

[[services.ports]]
port = 50053

[[vm]]
memory = '1gb'
cpu_kind = 'shared'
cpus = 1
count = 1

