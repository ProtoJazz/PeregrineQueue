version: "3.8"

services:
  postgres:
    container_name: postgres
    image: postgres:15
    env_file: .env.prod
    environment:
      - POSTGRES_HOST_AUTH_METHOD=scram-sha-256
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=peregrine_queue_dev
    volumes:
      - type: volume
        source: postgres_data_prod
        target: /var/lib/postgresql/data
        volume:
          nocopy: true
    ports:
      - "5420:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      default:
        aliases:
          - postgres
    hostname: postgres

  phoenix:
    container_name: phoenix
    build:
      context: .
      dockerfile: Dockerfile
    env_file: .env.prod
    environment:
      - MIX_ENV=prod
      - PHX_SERVER=true
      - PORT=8080
      - WORKER_ID=prod_worker
      - WORKER_ADDRESS=0.0.0.0:50053
      - PHOENIX_INTERNAL_PORT=50051
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/peregrine_queue_dev?ssl=false
    ports:
      - "8080:8080"
      - "50051:50051"
      - "50053:50053"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      default:
        aliases:
          - phoenix
    command: >
      sh -c "
        echo 'Waiting for postgres...' &&
        while ! nc -z postgres 5432; do
          sleep 1;
        done &&
        echo 'PostgreSQL started' &&
        echo 'Running migrations...' &&
        /app/bin/peregrine_queue eval 'PeregrineQueue.Release.migrate' &&
        echo 'Starting application...' &&
        /app/bin/peregrine_queue start
      "

networks:
  default:
    name: peregrine_network
    driver: bridge

volumes:
  postgres_data_prod:
    name: postgres_prod_data